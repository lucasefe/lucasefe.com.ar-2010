--- 
layout: post
title: LocosXRails Post Resolutions
---
Justo dos días antes de la conferencia LocosXRails (LXR) me había puesto a ver algunos videos de la última RubyConf, entre los que que se incluía el ya clásico TATFT, de "Brian Liles":http://smartic.us/. Bastante motivante para ser sincero (Ring 1)

La primera charla del evento LXR fue la de Obie Fernandez, y se trató del Hashrocket Way. Fue bastante intersante aunque creo que un poco irreal para lo que es Argentina. De cualquier manera siempre aporta tener esos objetivos surrealistas de ejemplo. No todo lo propuesto me pareció genial, ya hay algunas características muy corporate que me dan un poco de nauseas, pero en lo que respecta a las best practices propuestas me pareció muy copado. Por supuesto, habló de TATFT, y te escuché, Obie... (ring 2)

Al final del día uno, "Luis Lavena":http://blog.mmediasys.com/ (un amigo de todos nosotros) se puso a laburar con unos specs y tuve el placer de ver la disciplina de este chabón. Ufff. Uffff. Mierda, no baja los brazos. No me acuerdo que era lo que estaba especificando (asumo que algo referido al Ruby Installer de Windows) pero el flaco no abandonaba la práctica en ningún momento. Inclusive los probaba contra Ruby 1.8.6 y 1.9.1. Ver tipos así a veces es como una piña de certeza (ring 3)

Al otro día, presencié la charla de "Emilio Tagua":http://github.com/miloops, sobre debugging de aplicaciones rails (muy buena). Al final no se quien agregó algo como DATFT (Debugging all the fucking time) refiriéndose a que todo lo que había explicado Emlio no era para guardar para una emergencia, sino que había que usarlo, practicarlo e incorporarlo, porque no iba a ser fácil usar ese toolkit cuando quemaran las papas (ring 4).

El valor del test (first) es evidente. No hace falta urgar demasiado en su definición para ver sus beneficios, pero requiere disciplina. Mucha.

La cuestión es que ese tema me hace ruido desde hace muchos meses. Todo el tiempo, en cada proyecto, siento que arranco bien, escribiendo specs como corresponde, incluyendo algunos user stories del pepino. Pero que de alguna forma, luego de un tiempo, la cosa se descarrila un poco y pierdo la disciplina: *Comienzo a escribir sin tests.* Si, lo dije, y sin pudor.

Algo empuja, que hace que pierda esa batalla. En parte creo que tiene que ver con que el cliente no tiene ni idea del valor del testing y presiona para sacar el feature ya, o simplemente "se trata de un toque muy simple y no vale la pena escribir unos tests para eso", o lisa y llanamente no llego con los tiempos y tengo que correr para llegar a tiempo (problemas de estimación). 

No se muy bien cuál es la cuestión. Si alguien sabe... please, comenten! Imagino que no soy el único con estos fucking problemas.

Asi que mi resolución post LXR es disciplinarme lo suficiente respecto a mis técnicas de BDD. Más allá de los posts habituales de un blog personal, estaré bloggeando acerca de lo que vaya aprendiendo durante la marcha. En principio, back to basics. A leer, estudiar y desde hoy, no escribir sin specs. 

*Más vale test en mano que ruby volando. *
